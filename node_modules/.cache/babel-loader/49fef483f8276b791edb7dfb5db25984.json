{"ast":null,"code":"import _objectSpread from\"/home/skarr/.local/share/Trash/files/notes-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import'./Note.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// EA6 synatax of writing a function\nvar Note=function Note(_ref){var note=_ref.note,onNoteUpdate=_ref.onNoteUpdate;var noteTextUpdated=function noteTextUpdated(event){var newTextValue=event.currentTarget.textContent;// Check is newTextValue is different from the original or not\nif(newTextValue===note.text){return;}// We have defined the data type of updatedNoteObject \nconsole.log(\"Notes text changed\");var updatedNoteObject=_objectSpread(_objectSpread({},note),{},{// If newTextValue is null, it will receive empty string value\ntext:newTextValue||\"\"});// Update the original note with new updatedNoteObject\nonNoteUpdate(updatedNoteObject);};/*  No Index (Why?)\n        Index is not required as it is provided by the map function in \n        App.tsx\n    */ // BEM naming convention is followed here.    \nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsx(\"div\",{onBlur:noteTextUpdated,contentEditable:true,suppressContentEditableWarning:true,className:\"note__text\",children:note.text}),/*#__PURE__*/_jsx(\"div\",{className:\"note__link\",children:/*#__PURE__*/_jsx(\"a\",{href:note.link,children:note.link})})]});};export default Note;","map":{"version":3,"names":["Note","note","onNoteUpdate","noteTextUpdated","event","newTextValue","currentTarget","textContent","text","console","log","updatedNoteObject","link"],"sources":["/home/skarr/.local/share/Trash/files/notes-frontend/src/components/Note/Note.tsx"],"sourcesContent":["import { FC, FocusEvent } from 'react';\nimport INote from '../../interfaces/note.interface';\nimport './Note.css';\n\ntype Props = {\n    note: INote;\n    onNoteUpdate: (note: INote) => void;\n} \n\n// EA6 synatax of writing a function\nconst Note: FC<Props> = ({note, onNoteUpdate}) => {\n\n    const noteTextUpdated = (event: FocusEvent<HTMLDivElement, Element>) => {\n        const newTextValue = event.currentTarget.textContent;\n        \n        // Check is newTextValue is different from the original or not\n        if (newTextValue === note.text) {\n            return;\n        }\n\n        // We have defined the data type of updatedNoteObject \n        console.log(\"Notes text changed\");\n        const updatedNoteObject: INote = {\n            /*\n                ...note puts all the value of previous note, but changes\n                the parameters stated later\n            */\n            ...note,\n            \n            // If newTextValue is null, it will receive empty string value\n            text: newTextValue || \"\",\n        };\n\n        // Update the original note with new updatedNoteObject\n        onNoteUpdate(updatedNoteObject);\n    }\n \n    /*  No Index (Why?)\n        Index is not required as it is provided by the map function in \n        App.tsx\n    */\n    // BEM naming convention is followed here.    \n    return (\n        <div className=\"note\">\n            <div\n                onBlur={noteTextUpdated}\n                contentEditable={true} \n                suppressContentEditableWarning={true} \n                className=\"note__text\"\n            >\n                {note.text}\n            </div>\n            <div className=\"note__link\">\n                <a href={note.link}>{note.link}</a>\n            </div>\n        </div>\n    );\n}\n\nexport default Note;\n"],"mappings":"wIAEA,MAAO,YAAP,C,wFAOA;AACA,GAAMA,KAAe,CAAG,QAAlBA,KAAkB,MAA0B,IAAxBC,KAAwB,MAAxBA,IAAwB,CAAlBC,YAAkB,MAAlBA,YAAkB,CAE9C,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAgD,CACpE,GAAMC,aAAY,CAAGD,KAAK,CAACE,aAAN,CAAoBC,WAAzC,CAEA;AACA,GAAIF,YAAY,GAAKJ,IAAI,CAACO,IAA1B,CAAgC,CAC5B,OACH,CAED;AACAC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,GAAMC,kBAAwB,gCAKvBV,IALuB,MAO1B;AACAO,IAAI,CAAEH,YAAY,EAAI,EARI,EAA9B,CAWA;AACAH,YAAY,CAACS,iBAAD,CAAZ,CACH,CAvBD,CAyBA;AACJ;AACA;AACA,MA9BkD,CA+B9C;AACA,mBACI,aAAK,SAAS,CAAC,MAAf,wBACI,YACI,MAAM,CAAER,eADZ,CAEI,eAAe,CAAE,IAFrB,CAGI,8BAA8B,CAAE,IAHpC,CAII,SAAS,CAAC,YAJd,UAMKF,IAAI,CAACO,IANV,EADJ,cASI,YAAK,SAAS,CAAC,YAAf,uBACI,UAAG,IAAI,CAAEP,IAAI,CAACW,IAAd,UAAqBX,IAAI,CAACW,IAA1B,EADJ,EATJ,GADJ,CAeH,CA/CD,CAiDA,cAAeZ,KAAf"},"metadata":{},"sourceType":"module"}