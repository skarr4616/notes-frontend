{"ast":null,"code":"import _objectSpread from\"/home/skarr/Desktop/CSE Courses/MERN/notes-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/skarr/Desktop/CSE Courses/MERN/notes-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/skarr/Desktop/CSE Courses/MERN/notes-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/skarr/Desktop/CSE Courses/MERN/notes-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/skarr/Desktop/CSE Courses/MERN/notes-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from'react';import'./App.css';import{useState}from\"react\";import Note from'./components/Note/Note';import{createNote,deleteNote,getNotes,updateNote}from'./services/notesService';import{Button,FloatingLabel,Form,Modal}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State variable for noteList\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),notesList=_useState2[0],setNotesList=_useState2[1];// State variable for Add Note Modal\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showAddNoteModal=_useState4[0],setShowAddNoteModal=_useState4[1];var _useState5=useState({text:\"\",link:\"\"}),_useState6=_slicedToArray(_useState5,2),newNote=_useState6[0],setNewNote=_useState6[1];var handleCloseAddModal=function handleCloseAddModal(){setNewNote({text:\"\",link:\"\"});setShowAddNoteModal(false);};var handleShowAddModal=function handleShowAddModal(){return setShowAddNoteModal(true);};/* Infinite loop\n    Prevents infinite loop of function call and then render and then again \n    function call loop.\n  */ // Use effect is used to call a function only one time an object renders.\nuseEffect(function(){// const listFromStorageString = localStorage.getItem(\"my-notes\");\n// // If not null, use the local storage notes. Else, use DUMMY_NOTES\n// if (listFromStorageString) {\n//   const listFromStorageArray = JSON.parse(listFromStorageString);\n//   setNotesList(listFromStorageArray);\n// } else {\n//   setNotesList(DUMMY_NOTES);\n// }\ngetNotesFromServer();},[]);// useEffect(() => {\n//   console.log(\"Saving to local storage\");\n//   const notesListString = JSON.stringify(notesList);\n//   localStorage.setItem('my-notes',  notesListString);\n// }, [notesList]);\nvar getNotesFromServer=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var notes;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getNotes();case 2:notes=_context.sent;setNotesList(notes);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getNotesFromServer(){return _ref.apply(this,arguments);};}();/* Twice console log\n    You see two console logs becase strict mode is enabled which renders the \n    code twice in developement mode but not in production.\n  */ // console.log(\"Rendering\");\n// console.log(notesList);\n/* Why INote data type ?\n    We want to get the note from the child so that we can update\n    the whole note, not just the text value.\n    To do this, we get the INote data type\n  */var updateNoteItem=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(updatedNote){var noteFromServer,updatedList;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return updateNote(updatedNote);case 2:noteFromServer=_context2.sent;// console.log(\"Value updated in the app component\");\n// console.log(updatedNote);\n// Created a temporary variable with updated variable\nupdatedList=notesList.map(function(noteItem){if(noteItem._id===updatedNote._id){return updatedNote;}return noteItem;});// Setting the original noteList with updatedList\nsetNotesList(updatedList);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function updateNoteItem(_x){return _ref2.apply(this,arguments);};}();var deleteNoteItem=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(noteToDelete){var deletedNote,remainingNotes;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return deleteNote(noteToDelete._id);case 2:deletedNote=_context3.sent;remainingNotes=notesList.filter(function(noteItem){return noteItem._id!==noteToDelete._id;});setNotesList(remainingNotes);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteNoteItem(_x2){return _ref3.apply(this,arguments);};}();var addNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var savedNote;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return createNote(newNote);case 2:savedNote=_context4.sent;setNotesList([].concat(_toConsumableArray(notesList),[savedNote]));handleCloseAddModal();case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function addNote(){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Button,{variant:\"dark\",className:\"add-button\",onClick:handleShowAddModal,children:/*#__PURE__*/_jsx(\"div\",{className:\"add-btn-text\",children:\"+\"})}),/*#__PURE__*/_jsxs(Modal,{show:showAddNoteModal,onHide:handleCloseAddModal,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add Note\"})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsx(FloatingLabel,{controlId:\"floatingTextarea2\",label:\"Text\",children:/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){var newVal=event.currentTarget.value;setNewNote(_objectSpread(_objectSpread({},newNote),{},{text:newVal}));},as:\"textarea\",placeholder:\"Enter your note text\",style:{height:'100px'}})}),/*#__PURE__*/_jsx(FloatingLabel,{controlId:\"floatingTextarea\",label:\"Link\",className:\"mb-3 note-link\",children:/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){var newVal=event.currentTarget.value;setNewNote(_objectSpread(_objectSpread({},newNote),{},{link:newVal}));},type:\"url\",placeholder:\"Enter note url\"})})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleCloseAddModal,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:addNote,children:\"Create\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"notes-list\",children:notesList.map(function(noteItem,index){return/*#__PURE__*/_jsx(Note,{note:noteItem,onNoteUpdate:updateNoteItem,onNoteDelete:deleteNoteItem},index);})})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","Note","createNote","deleteNote","getNotes","updateNote","Button","FloatingLabel","Form","Modal","App","notesList","setNotesList","showAddNoteModal","setShowAddNoteModal","text","link","newNote","setNewNote","handleCloseAddModal","handleShowAddModal","getNotesFromServer","notes","updateNoteItem","updatedNote","noteFromServer","updatedList","map","noteItem","_id","deleteNoteItem","noteToDelete","deletedNote","remainingNotes","filter","addNote","savedNote","event","newVal","currentTarget","value","height","index"],"sources":["/home/skarr/Desktop/CSE Courses/MERN/notes-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { useState } from \"react\";\nimport Note from './components/Note/Note';\nimport INote from './interfaces/note.interface';\nimport { createNote, deleteNote, getNotes, updateNote } from './services/notesService';\nimport { Button, FloatingLabel, Form, Modal } from 'react-bootstrap';\n\nfunction App() {\n\n  // State variable for noteList\n  const [notesList, setNotesList] = useState<INote[]>([]);\n\n  // State variable for Add Note Modal\n  const [showAddNoteModal, setShowAddNoteModal] = useState(false);\n  const [newNote, setNewNote] = useState<Partial<INote>>({\n    text: \"\",\n    link: \"\"\n  });\n\n  const handleCloseAddModal = () => {\n    setNewNote({\n      text: \"\",\n      link: \"\"\n    });\n\n    setShowAddNoteModal(false);\n  };\n  const handleShowAddModal = () => setShowAddNoteModal(true);\n\n  /* Infinite loop\n    Prevents infinite loop of function call and then render and then again \n    function call loop.\n  */\n  // Use effect is used to call a function only one time an object renders.\n\n  useEffect(() => {\n    // const listFromStorageString = localStorage.getItem(\"my-notes\");\n\n    // // If not null, use the local storage notes. Else, use DUMMY_NOTES\n    // if (listFromStorageString) {\n    //   const listFromStorageArray = JSON.parse(listFromStorageString);\n    //   setNotesList(listFromStorageArray);\n    // } else {\n    //   setNotesList(DUMMY_NOTES);\n    // }\n\n    getNotesFromServer();\n  }, [])\n\n  // useEffect(() => {\n  //   console.log(\"Saving to local storage\");\n  //   const notesListString = JSON.stringify(notesList);\n  //   localStorage.setItem('my-notes',  notesListString);\n\n  // }, [notesList]);\n\n  const getNotesFromServer = async () => {\n    const notes = await getNotes();\n    setNotesList(notes);\n  }\n\n  /* Twice console log\n    You see two console logs becase strict mode is enabled which renders the \n    code twice in developement mode but not in production.\n  */\n\n  // console.log(\"Rendering\");\n  // console.log(notesList);\n\n  /* Why INote data type ?\n    We want to get the note from the child so that we can update\n    the whole note, not just the text value.\n    To do this, we get the INote data type\n  */\n  const updateNoteItem = async (updatedNote: INote) => {\n\n    const noteFromServer = await updateNote(updatedNote);    \n\n    // console.log(\"Value updated in the app component\");\n    // console.log(updatedNote);\n\n    // Created a temporary variable with updated variable\n    const updatedList = notesList.map((noteItem: INote) => {\n      if (noteItem._id === updatedNote._id) {\n        return updatedNote;\n      }\n\n      return noteItem;\n    });\n\n    // Setting the original noteList with updatedList\n    setNotesList(updatedList);\n  }\n\n  const deleteNoteItem = async (noteToDelete: INote) => {\n    const deletedNote = await deleteNote(noteToDelete._id);\n    const remainingNotes = notesList.filter((noteItem) => {\n      return noteItem._id !== noteToDelete._id;\n    });\n\n    setNotesList(remainingNotes);\n  }\n\n  const addNote = async () => {\n    const savedNote = await createNote(newNote);\n    setNotesList([...notesList, savedNote]) ;\n    handleCloseAddModal();\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Button variant=\"dark\" className='add-button' onClick={handleShowAddModal}>\n        <div className='add-btn-text'>+</div>\n      </Button>\n\n      <Modal show={showAddNoteModal} onHide={handleCloseAddModal}>\n\n        <Modal.Header closeButton>\n          <Modal.Title>Add Note</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n\n          <FloatingLabel controlId=\"floatingTextarea2\" label=\"Text\">\n            <Form.Control\n              onChange={(event) => {\n                const newVal = event.currentTarget.value;\n                setNewNote({\n                  ...newNote,\n                  text: newVal\n                });\n              }}\n              as=\"textarea\"\n              placeholder=\"Enter your note text\"\n              style={{ height: '100px' }}\n            />\n          </FloatingLabel>\n\n          <FloatingLabel\n            controlId=\"floatingTextarea\"\n            label=\"Link\"\n            className=\"mb-3 note-link\"\n          >\n            <Form.Control\n              onChange={(event) => {\n                const newVal = event.currentTarget.value;\n                setNewNote({\n                  ...newNote,\n                  link: newVal\n                })\n              }}\n              type=\"url\"\n              placeholder=\"Enter note url\"\n            />\n          </FloatingLabel>\n\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseAddModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={addNote}>\n            Create\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <div className=\"notes-list\">\n        {\n          notesList.map((noteItem, index) => {\n            return (\n              <Note note={noteItem} onNoteUpdate={updateNoteItem} onNoteDelete={deleteNoteItem} key={index} />\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}